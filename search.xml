<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Comet OJ c1847</title>
    <url>/2020/03/15/c1847/</url>
    <content><![CDATA[<h2 id="c1847"><a href="#c1847" class="headerlink" title="c1847"></a>c1847</h2><p>一道简单的字符串比较。</p>
<p>枚举每一位，进行累加。</p>
<p>这里用到了三目运算符。</p>
<a id="more"></a>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">条件 ? 若为真，则执行该处语句 : 若为假，则执行该处语句；</span><br></pre></td></tr></table></figure>
<p>所以代码如下:</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">cin</span>;<span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">cout</span>;<span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">cerr</span>;<span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mmax = <span class="number">100000</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[mmax + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> len,ans = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">std</span>::ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line">	<span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;len;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; len;++i)&#123;</span><br><span class="line">		s[i] == <span class="string">'G'</span> ? ++ans:ans; </span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>原题地址<a href="https://www.cometoj.com/problem/1847" target="_blank" rel="noopener">https://www.cometoj.com/problem/1847</a></p>
]]></content>
      <categories>
        <category>Comet OJ</category>
      </categories>
      <tags>
        <tag>模拟</tag>
        <tag>字符串</tag>
        <tag>CometOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>Comet OJ c1477</title>
    <url>/2020/03/11/c1477/</url>
    <content><![CDATA[<h2 id="c1477"><a href="#c1477" class="headerlink" title="c1477"></a>c1477</h2><p>这种题目显然是签到题，简单的字符串比较。</p>
<p>但要注意代码量。</p>
<p>我们不能傻傻打几重循环，显然，数组是一个更好地选择。</p>
<a id="more"></a>
<p>代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">cin</span>;<span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">cerr</span>;<span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">cout</span>;<span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[<span class="number">1000</span>+<span class="number">10</span>];</span><br><span class="line"><span class="keyword">char</span> st[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n,len,ans=<span class="number">0</span>;</span><br><span class="line">    st[<span class="number">1</span>]=<span class="string">'a'</span>;st[<span class="number">2</span>]=<span class="string">'c'</span>;st[<span class="number">3</span>]=<span class="string">'p'</span>;st[<span class="number">4</span>]=<span class="string">'t'</span>;st[<span class="number">5</span>]=<span class="string">'y'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        <span class="keyword">int</span> i;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;s+<span class="number">1</span>;</span><br><span class="line">        len=<span class="built_in">strlen</span>(s+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">5</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[len<span class="number">-5</span>+i]!=st[i]) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">6</span>) ans++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>原题地址<a href="https://www.cometoj.com/problem/1477" target="_blank" rel="noopener">https://www.cometoj.com/problem/1477</a></p>
]]></content>
      <categories>
        <category>Comet OJ</category>
      </categories>
      <tags>
        <tag>字符串</tag>
        <tag>枚举</tag>
        <tag>CometOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>Comet OJ c1023</title>
    <url>/2020/03/10/c1023/</url>
    <content><![CDATA[<h2 id="c1023"><a href="#c1023" class="headerlink" title="c1023"></a>c1023</h2><p>这道题教会了我们观察。</p>
<p>理解题意后得到要求我们输出 </p>
<a id="more"></a>
<script type="math/tex; mode=display">
    1+2+3+4+\cdots +n+n-1+\cdots + 1</script><p>自然想起等差数列和的公式</p>
<script type="math/tex; mode=display">
    S = \frac{(1+n)n}{2}</script><p>自然得到</p>
<script type="math/tex; mode=display">
    ans = (1+n)n/2-n</script><p>下附代码<br><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">cin</span>;<span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">cout</span>;<span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">endl</span>;<span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">cerr</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> N;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;N;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;(N+<span class="number">1</span>)*N-N;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>原题地址<a href="https://www.cometoj.com/problem/1023" target="_blank" rel="noopener">https://www.cometoj.com/problem/1023</a></p>
]]></content>
      <categories>
        <category>Comet OJ</category>
      </categories>
      <tags>
        <tag>数学</tag>
        <tag>模拟</tag>
        <tag>CometOJ</tag>
      </tags>
  </entry>
  <entry>
    <title>神铺在桌面的一张地图</title>
    <url>/2019/09/07/%E7%A5%9E%E9%93%BA%E5%9C%A8%E6%A1%8C%E9%9D%A2%E7%9A%84%E4%B8%80%E5%BC%A0%E5%9C%B0%E5%9B%BE/</url>
    <content><![CDATA[<p><img src="https://note.youdao.com/yws/api/personal/file/WEB39c283e574f542c00fda81236fa0bce1?method=download&shareKey=9244fc9279dd84ea7a3d506da5e17fb7">Sol III，这个灵长类动物——人类——的发源地，被人类称为地球。</p>
<a id="more"></a>
<p><img src="https://note.youdao.com/yws/api/personal/file/WEB7bf5d6048ad8a1a7b8dc92191fd38f42?method=download&shareKey=3571b6e3e1ba5673082046dd9de7df4c"></p>
<p>人们认为神为人类选择了一处完美的家园，殊不知……</p>
<p><img src="https://note.youdao.com/yws/api/personal/file/WEB60198becff7edf0854f5100c592456f4?method=download&shareKey=085031fa817aa7b4d2c98b87f3495bdc"></p>
<p>当人们第一次探明超空间航道时，举国欢庆，地球联合国首脑称“这是一次新的机遇”。人类将目光放到更远的地方</p>
<p>神的地图逐渐展开，真正展现在这个新生种族面前……</p>
<p><img src="https://note.youdao.com/yws/api/personal/file/WEB9545986c8c6a800905ce24144b6d94c6?method=download&shareKey=505796a3266fbaff0518a1c30d5f28fc"></p>
<p>曾经人类认为自己将在这个银河中有一席之地，甚至是这个银河中唯一的“智慧生物”。在科技飞升之后的10年内，人类发展着，前进的车轮没有阻碍，直到有一天……</p>
<p>盲目自大终会带来审判。</p>
<p><img src="https://note.youdao.com/yws/api/personal/file/WEB1f57fe56d779794a740502145fb8d496?method=download&shareKey=29258263b910d6de841770f751844c68"></p>
<p>人类遇到了大麻烦。</p>
<p>最终，人类放下了尊严，成为了附属国。</p>
<p>并入过程很快，也很直接。Sol III成为了宗主国的一部分，</p>
<p>不可分割的一部分。</p>
<p><img src="https://note.youdao.com/yws/api/personal/file/WEBb5363042c77438d640678179fb6f93c7?method=download&shareKey=5ffe98ee0a21bb9d2983693b2465b849"></p>
<p>人类的视野又回到了地球，抬头仰望，或许能看见宗主国的驻军。</p>
<p><img src="https://note.youdao.com/yws/api/personal/file/WEBd8e30963361f3c6092eeb7b1b7e21456?method=download&shareKey=6846537339072a718b9aebf9a1633ef0"></p>
<p>Sol III 成为了这个国家的一颗边陲行星。</p>
<p>神的地图最终只展现给这个新生种族小小的一角。</p>
<p>人类的目光，何时才能穿过战争的迷雾，去窥探那神的地图上的小小一角。</p>
<p><img src="https://note.youdao.com/yws/api/personal/file/WEBe10cf3e776b7f7d8c3f51612360b1daf?method=download&shareKey=bb7d66e19208f1345bf2321f1a6c6e30"></p>
]]></content>
      <categories>
        <category>随想</category>
      </categories>
      <tags>
        <tag>随想</tag>
      </tags>
  </entry>
  <entry>
    <title>百度之星——初赛(三)</title>
    <url>/2019/08/24/%E7%99%BE%E5%BA%A6%E4%B9%8B%E6%98%9F%E2%80%94%E2%80%94%E5%88%9D%E8%B5%9B%E4%B8%89/</url>
    <content><![CDATA[<h1 id="T1-最短路-I"><a href="#T1-最短路-I" class="headerlink" title="T1  最短路 I"></a>T1  最短路 I</h1><p>题面：</p>
<p>有一张 n 个点的完全无向图，点的标号是 1…n，其中边(i,j) 的长度是 i xor j，现在你需要求出点 1 到点 n 的最短路的                长度。</p>
<p>输入：</p>
<a id="more"></a>
<p>第一行一个正整数 T 表示数据组数 $(1\le T\le 100)$</p>
<p>对于每组数据：第一行一个正整数 n 表示点数 $(2\le n\le 10e5)$</p>
<p>输出：</p>
<p>输出 T 行，每行一个整数表示点 1 到点 n 的最短路</p>
<p>思路：</p>
<p>先模拟一下，到5就差不多了</p>
<p>发现规律：最短路即是 $1\; xor\; n$，然后就秒了</p>
<p>代码 ：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">cin</span>;<span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">cerr</span>;<span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">cout</span>;<span class="keyword">using</span> <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    <span class="built_in">cin</span>.tie(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n,T;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;T;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;(<span class="number">1</span>^n);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>比赛</category>
      </categories>
      <tags>
        <tag>uncompleted</tag>
        <tag>比赛</tag>
      </tags>
  </entry>
</search>
